{"name":"Test","tagline":"","body":"#  Crawler un site internet et obtenir un moteur de recherche\r\n\r\nCe tutorial rapide à réaliser vous permettra de prendre en main certaines fonctionnalités d'OpenSearchServer. Vous apprendez à crawler un site pour construire l'index de recherche, mettre en place une page de recherche, configurer des facettes et activer l'auto-complétion !\r\n\r\nPour commencer ce tutorial il vous suffit simplement d'[Installer OpenSearchServer](http://www.open-search-server.com/fr/tester-opensearchserver).\r\n\r\nNous imaginerons ici que votre site Internet est un site d'actualités. Nous avons créé pour cela 4 pages fictives : XXXXXX\r\n\r\n## Mise en place du crawl et indexation des contenus\r\n\r\n### Création et configuration initiale de l'index\r\n\r\nCommençons par créer un `index`. L'index est le cœur d'OpenSearchServer, c'est autour des index que le reste des fonctionnalités s'organisent.\r\n\r\n* Nom de l'index : `site`\r\n* Template : `Empty index`\r\n\r\nCliquez sur `Create`.\r\n\r\nL'index est créé immédiatement. Le contexte global de l'interface change et de nouveaux onglets apparaissent en haut de page.\r\n\r\nSélectionnez l'onglet `Schema`. Le schéma permet de définir quels sont les champs de l'index. \r\nUn champ de schéma possède 5 propriétés :\r\n* **Name** : le nom du champ\r\n* **Indexed** : indique si la valeur du champ doit être indexée, ce qui permettra alors d'effectuer des requêtes dessus. Il arrive que certains champs ne soient pas utilisés dans les recherches mais doivent tout de même être retournés (voir propriété suivante) lors d'une requête de recherche.\r\n* **Stored** : indique si la valeur du champ doit être stockée telle quelle. Cela permettra de renvoyer la donnée brute lors d'une requête de recherche.\r\n* **TermVector** : indique si des `snippets` pourront être configurés sur ce champ. Les snippet sont des extraits de texte contenant les mots recherchés.\r\n* **Analyzer** : les `analyzers` sont des ensembles de filtre et de traitements automatiques qui peuvent être effectués sur les valeurs indexées. Nous ne les couvrirons pas durant ce tutorial. \r\n\r\nNous allons créer 4 champs : url, title, section et content.\r\n\r\nCréez le champ url :\r\n* **Name** : url\r\n* **Indexed** : yes\r\n* **Stored** : yes\r\n* **TermVector** : no\r\n* **Analyzer** : laisser vide\r\n\r\nCliquez sur le bouton `Add`.\r\n\r\nLe champ est ajouté en dessous dans la zone __List of existing fields and their settings__.\r\n\r\nCréez les 3 autres champs en choisissant ces  options :\r\n* title :\r\n  * **Name** : title\r\n  * **Indexed** : yes\r\n  * **Stored** : yes\r\n  * **TermVector** : no\r\n  * **Analyzer** : laisser vide\r\n* section : ce champ servira à stocker la rubrique de chaque article.\r\n  * **Name** : section\r\n  * **Indexed** : yes\r\n  * **Stored** : yes\r\n  * **TermVector** : no\r\n  * **Analyzer** : laisser vide\r\n* content :\r\n  * **Name** : content\r\n  * **Indexed** : yes\r\n  * **Stored** : no\r\n  * **TermVector** : no\r\n  * **Analyzer** : laisser vide\r\n\r\nNos 4 champs sont maintenant créés et visibles dans la liste des champs.\r\n\r\n### Configuration du crawl\r\n\r\n\r\n## Rechercher les contenus indexés\r\n\r\n\r\n## Proposer une page de recherche aux utilisateurs\r\n\r\n\r\n## Ajout d’une facette\r\n\r\n\r\n## Ajout de l’autocomplétion","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}